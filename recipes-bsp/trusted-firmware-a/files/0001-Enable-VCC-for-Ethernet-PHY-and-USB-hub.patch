From 3b6b1e5fb0ce11c06e71e67214cb175ae1c1c07e Mon Sep 17 00:00:00 2001
From: "deepak.s" <deepak.s@adlinktech.com>
Date: Tue, 27 Aug 2024 11:58:49 +0530
Subject: [PATCH] Enable VCC for Ethernet PHY and USB hub

---
 .../drivers/pmic/pmic_initial_setting.c       |  3 +-
 .../mt8195/drivers/pmic/pmic_wrap_init.c      | 29 +++++++++++++++++++
 2 files changed, 31 insertions(+), 1 deletion(-)

diff --git a/plat/mediatek/mt8195/drivers/pmic/pmic_initial_setting.c b/plat/mediatek/mt8195/drivers/pmic/pmic_initial_setting.c
index b6a6cefa7..ac67a5d5e 100644
--- a/plat/mediatek/mt8195/drivers/pmic/pmic_initial_setting.c
+++ b/plat/mediatek/mt8195/drivers/pmic/pmic_initial_setting.c
@@ -254,6 +254,7 @@ void pmic_initial_setting(void)
 	mt6360_ldo_config_interface(0x1B, 0xD, 0xD, 0x4);
 	mt6360_ldo_config_interface(0x17, 0x3, 0x3, 0x6);
 
-	/* mt6360 ldo2, for DSI0 panel 1.8v on */
+	/* mt6360 ldo2, for DSI0 panel 1.8v on */ // --> update to 2.5v 
+	mt6360_ldo_config_interface(0x15, 0x7, 0x7, 0x4);
 	mt6360_ldo_config_interface(0x11, 0x3, 0x3, 0x6);
 }
diff --git a/plat/mediatek/mt8195/drivers/pmic/pmic_wrap_init.c b/plat/mediatek/mt8195/drivers/pmic/pmic_wrap_init.c
index 4ffe687eb..77baf2cc9 100644
--- a/plat/mediatek/mt8195/drivers/pmic/pmic_wrap_init.c
+++ b/plat/mediatek/mt8195/drivers/pmic/pmic_wrap_init.c
@@ -1517,6 +1517,35 @@ signed int pwrap_init(void)
 		PWRAPCRI("clear record command fail, ret=%x\n", sub_return);
 	PWRAPLOG("clear record command ok\n\r");
 
+	  // for VCN18 enable high
+       pwrap_read_nochk(PMIC_RG_LDO_VCN33_2_EN_0_ADDR, &rdata);
+       PWRAPCRI("PMIC_RG_LDO_VCN33_2_EN_0_ADDR = 0x%x\n", rdata);
+
+       rdata &= ~(PMIC_RG_LDO_VCN33_2_EN_0_MASK << PMIC_RG_LDO_VCN33_2_EN_0_SHIFT);
+       rdata |= (1 << PMIC_RG_LDO_VCN33_2_EN_0_SHIFT);
+       sub_return = pwrap_write_nochk(PMIC_RG_LDO_VCN33_2_EN_0_ADDR, rdata);
+       if (sub_return != 0)
+       PWRAPCRI("VCN33 en0 enable command fail, ret=%x\n", sub_return);
+       PWRAPLOG("VCN33 en0 enable command ok\n");
+
+       pwrap_read_nochk(PMIC_RG_LDO_VCN33_2_EN_0_ADDR, &rdata);
+       PWRAPCRI("PMIC_RG_LDO_VCN33_2_EN_0_ADDR = 0x%x\n", rdata);
+
+       // for VCN18 enable high
+       pwrap_read_nochk(PMIC_RG_LDO_VCN33_2_EN_1_ADDR, &rdata);
+       PWRAPCRI("PMIC_RG_LDO_VCN33_2_EN_1_ADDR = 0x%x\n", rdata);
+
+       rdata &= ~(PMIC_RG_LDO_VCN33_2_EN_1_MASK << PMIC_RG_LDO_VCN33_2_EN_1_SHIFT);
+       rdata |= (1 << PMIC_RG_LDO_VCN33_2_EN_1_SHIFT);
+       sub_return = pwrap_write_nochk(PMIC_RG_LDO_VCN33_2_EN_1_ADDR, rdata);
+       if (sub_return != 0)
+       PWRAPCRI("VCN18 enable command fail, ret=%x\n", sub_return);
+       PWRAPLOG("VCN18 enable command ok\n");
+
+       pwrap_read_nochk(PMIC_RG_LDO_VCN33_2_EN_1_ADDR, &rdata);
+       PWRAPCRI("PMIC_RG_LDO_VCN33_2_EN_1_ADDR = 0x%x\n", rdata);
+
+
 #ifdef PMIC_WRAP_MATCH_SUPPORT
 	/* enable matching mode */
 	PWRAPCRI("PMIC_WRAP_MONITOR_MODE = Matching Mode\n");
-- 
2.45.2

